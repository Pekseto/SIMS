<Window x:Class="Tourist_Project.WPF.Views.Guide.CreateTourView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ns="clr-namespace:Tourist_Project"
        xmlns:val="clr-namespace:Tourist_Project.WPF.Validation"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Tourist application" Height="500" Width="1100">
    <Window.Resources>
        <ControlTemplate x:Key="ValidationTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="CreateButton" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{StaticResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/addGuideIcon.png" Margin="5" Height="25"></Image>
                            <TextBlock Text="{ns:Loc Create}" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CancelButton" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{StaticResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/cancelGuideIcon.png" Margin="5" Height="25"></Image>
                            <TextBlock Text="{ns:Loc Cancel}" VerticalAlignment="Center"></TextBlock>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlusButton" TargetType="xctk:IconButton">
            <Setter Property="Background" Value="{StaticResource ActionColor}"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:IconButton}">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <ItemContainerTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="../../../Images/plus.png" VerticalAlignment="Center" Margin="7"></Image>
                        </StackPanel>
                    </ItemContainerTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                    <Setter Property="Background" Value="LightSlateGray"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ComboStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="PART_ToggleButton"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  Focusable="False"
                                  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  ClickMode="Press"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                  Grid.Column="0"
                                                                  Margin="3,0,0,0"
                                                                  HorizontalAlignment="Left"
                                                                  VerticalAlignment="Center"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                        <Path x:Name="Arrow"
                                                      Grid.Column="1"
                                                      Fill="Black"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="Arrow" Property="Data" Value="M0,4 L8,4 L4,0 z" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.5" />
                                                            <Setter TargetName="Arrow" Property="Fill" Value="DarkGray" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup x:Name="PART_Popup"
                           AllowsTransparency="True"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Bottom"
                           PopupAnimation="Slide"
                           Focusable="False">
                                <Border x:Name="PopupBorder"
                                Background="White"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                    <ScrollViewer CanContentScroll="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid x:Name="WindowGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid x:Name="LeftGrid" Grid.Column="0" Grid.Row="0" Style="{StaticResource MainGrid}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="300"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Label x:Name="TourName" Grid.Column="0" Grid.Row="0" Content="{ns:Loc TourName}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="Location" Grid.Column="0" Grid.Row="1" Content="{ns:Loc CityAndCountry}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="Description" Grid.Column="0" Grid.Row="2" Content="{ns:Loc Description}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="Language" Grid.Column="0" Grid.Row="3" Content="{ns:Loc Language}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="MaxNumberGuests" Grid.Column="0" Grid.Row="4" Content="{ns:Loc MaxGuestsNumber}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="Date" Grid.Column="0" Grid.Row="5" Content="{ns:Loc TourDate}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="Duration" Grid.Column="0" Grid.Row="6" Content="{ns:Loc TourDuration}" VerticalAlignment="Center" FontSize="20"/>

            <TextBox Grid.Column="1" Grid.Row="0" Width="270" Height="40" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <TextBox.Text>
                    <Binding Path="TourForAdd.Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:EmptyStringValidation></val:EmptyStringValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <ComboBox Grid.Column="1" Grid.Row="1" Width="125" Height="40" HorizontalAlignment="Left" Margin="15,0,0,0" BorderThickness="3" ItemsSource="{Binding Cities, UpdateSourceTrigger=PropertyChanged}" >
                <ComboBox.SelectedItem>
                    <Binding Path="Location.City" UpdateSourceTrigger="PropertyChanged">
                    </Binding>
                </ComboBox.SelectedItem>
            </ComboBox>
            <ComboBox Grid.Column="1" Grid.Row="1" Width="125" Height="40" HorizontalAlignment="Right" Margin="0,0,15,0" BorderThickness="3" ItemsSource="{Binding Countries, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.SelectedItem>
                    <Binding Path="Location.Country" UpdateSourceTrigger="PropertyChanged">
                    </Binding>
                </ComboBox.SelectedItem>
            </ComboBox>
            <TextBox Grid.Column="1" Grid.Row="2" Width="270" Height="40" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <TextBox.Text>
                    <Binding Path="TourForAdd.Description" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:EmptyStringValidation></val:EmptyStringValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Grid.Column="1" Grid.Row="3" Width="270" Height="40"  Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <TextBox.Text>
                    <Binding Path="TourForAdd.Language" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:EmptyStringValidation></val:EmptyStringValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <xctk:IntegerUpDown Grid.Column="1" Grid.Row="4" Width="270" Height="40" Minimum="1" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <xctk:IntegerUpDown.Value>
                    <Binding Path="TourForAdd.MaxGuestsNumber" UpdateSourceTrigger="PropertyChanged" Mode="OneWayToSource">
                        <Binding.ValidationRules>
                            <val:MinValueValidation></val:MinValueValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:IntegerUpDown.Value>
            </xctk:IntegerUpDown>
            <xctk:DateTimePicker Grid.Column="1" Grid.Row="5" Width="270" Height="40" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <xctk:DateTimePicker.Value>
                    <Binding Path="TourForAdd.StartTime" UpdateSourceTrigger="PropertyChanged" Mode="OneWayToSource">
                        <Binding.ValidationRules>
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:DateTimePicker.Value>
            </xctk:DateTimePicker>
            <xctk:IntegerUpDown Grid.Column="1" Grid.Row="6" Width="270" Height="40" Minimum="1" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <xctk:IntegerUpDown.Value>
                    <Binding Path="TourForAdd.Duration" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:MinValueValidation></val:MinValueValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:IntegerUpDown.Value>
            </xctk:IntegerUpDown>
        </Grid>
        <Grid x:Name="RightGrid" Grid.Column="1" Grid.Row="0" Style="{StaticResource MainGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="60"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="360"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label x:Name="Checkpoint" Grid.Column="0" Grid.Row="0" Content="{ns:Loc Checkpoints}" VerticalAlignment="Center" FontSize="20"/>
            <Label x:Name="Image" Grid.Column="0" Grid.Row="2" Content="{ns:Loc Images}" VerticalAlignment="Center" FontSize="20"/>

            <TextBox Grid.Column="1" Grid.Row="0" Width="270" Height="40" HorizontalAlignment="Left" Margin="10 0 0 0" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" >
                <TextBox.Text>
                    <Binding Path="PointForAdd.Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:EmptyStringValidation></val:EmptyStringValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <xctk:IconButton Grid.Column="1" Grid.Row="0" Command="{Binding AddCheckpointCommand}" Width="40" Height="40" HorizontalAlignment="Right" Margin="0 0 20 0" Style="{StaticResource PlusButton}">
            </xctk:IconButton>
            <TextBox Grid.Column="1" Grid.Row="2" Width="270" Height="40" HorizontalAlignment="Left" Margin="10 0 0 0" Validation.ErrorTemplate="{StaticResource ValidationTemplate}">
                <TextBox.Text>
                    <Binding Path="ImageForAdd.Url" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:EmptyStringValidation></val:EmptyStringValidation>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <xctk:IconButton Grid.Column="1" Grid.Row="2" Command="{Binding AddImageCommand}" Width="40" Height="40" HorizontalAlignment="Right" Margin="0 0 20 0" Style="{StaticResource PlusButton}"/>

            <ListBox x:Name="CheckpointsBox" Grid.Column="1" Grid.Row="1" Width="270" HorizontalAlignment="Left" Margin="10 10 0 10 " ItemsSource="{Binding Checkpoints, UpdateSourceTrigger=PropertyChanged}">
            </ListBox>
                <ListBox x:Name="ImagesBox" Grid.Column="1" Grid.Row="3" Width="270" HorizontalAlignment="Left" Margin="10 10 0 10 " ItemsSource="{Binding Images, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Grid x:Name="ButtonGrid" Grid.Column="1" Grid.Row="1" Style="{StaticResource LeftGrid}">
            <xctk:IconButton x:Name="CreateButton" Command="{Binding CreateCommand}" Width="200" Height="40" HorizontalAlignment="Left" Margin="20 0 0 0" Style="{StaticResource CreateButton}">
            </xctk:IconButton>
            <xctk:IconButton x:Name="CancelButton" Command="{Binding CancelCommand}" Width="200" Height="40" HorizontalAlignment="Right" Margin="0 0 20 0" Style="{StaticResource CancelButton}">
            </xctk:IconButton>
        </Grid>
        <Grid Grid.Column="0" Grid.Row="1" Style="{StaticResource LeftGrid}"></Grid>
        <StatusBar x:Name="BottomGrid" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2">
            <TextBlock Text="{ns:Loc CreateTour}" FontSize="15" Height="25" VerticalAlignment="Center" Margin="20 0 0 0"></TextBlock>
        </StatusBar>
    </Grid>
</Window>
