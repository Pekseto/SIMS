<Window x:Class="Tourist_Project.WPF.Views.Owner.OwnerMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tourist_Project.WPF.Views"
        mc:Ignorable="d"
        Title="Accommodations" Height="740" Width="1250" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <DataTemplate x:Key="AccommodationDataTemplate">
            <StackPanel Width="490" Height="auto">
                <Image Width="400" Height="100" HorizontalAlignment="Left" Source="{Binding Image.Url, UpdateSourceTrigger=PropertyChanged}"></Image>
                <Label Content="{Binding Accommodation.Name, UpdateSourceTrigger=PropertyChanged}" FontSize="18" Height="45" Margin="210, -160, 10,0 "></Label>
                <Label Content="{Binding Location.Country, UpdateSourceTrigger=PropertyChanged}" FontSize="16" Height="45" Margin="210, -80, 10,10 "></Label>
                <Label Content="{Binding Location.City, UpdateSourceTrigger=PropertyChanged}" FontSize="16" Height="45" Margin="310, -80, 10,10 "></Label>
                <Label Content="{Binding Accommodation.Type, UpdateSourceTrigger=PropertyChanged}" FontSize="16" Height="30" Margin="210, -30, 10,0 "></Label>
                <Separator></Separator>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="GuestRatingDataTemplate">
            <StackPanel>
                <Label Content="{Binding  UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Left"></Label>
                <Separator/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ReviewsDataTemplate">
            <StackPanel>
                <Label Content="{Binding UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Left" FontWeight="Bold"></Label>
                <Separator/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ReservationDataTemplate">
            <Grid>
                <Grid Background="#acdcdc" Margin="5,10,0,200">
                    <Label Content="Accommodation name:" FontWeight="DemiBold" Margin="5,0,0,0"></Label>
                    <Label Content="{Binding Accommodation.Name, UpdateSourceTrigger=PropertyChanged}" FontStyle="Italic" FontWeight="DemiBold" Margin="140,0,0,0"></Label>
                    <Label Content="Guest name:" FontWeight="DemiBold" Margin="5,30,0,0"></Label>
                    <Label Content="{Binding User.FullName, UpdateSourceTrigger=PropertyChanged}" FontStyle="Italic" FontWeight="DemiBold" Margin="140,30,0,0"></Label>
                </Grid>
                <Label Content="CheckIn         CheckOut" FontWeight="Bold" Margin="100,65,0,0"></Label>
                <Label Content="Old dates:" Margin="5,90,0,0" Foreground="Red"></Label>
                <Label Content="{Binding RescheduleRequest.OldBeginningDate, UpdateSourceTrigger=PropertyChanged}" Foreground="Red" Margin="100,90,0,0"></Label>
                <Label Content="{Binding RescheduleRequest.OldEndDate, UpdateSourceTrigger=PropertyChanged}" Foreground="Red" Margin="173,90,0,0"></Label>
                <Label Content="New dates:" Margin="5,120,0,0" Foreground="Green"></Label>
                <Label Content="{Binding RescheduleRequest.NewBeginningDate, UpdateSourceTrigger=PropertyChanged}" Foreground="Green" Margin="100, 120,0,0"></Label>
                <Label Content="{Binding RescheduleRequest.NewEndDate, UpdateSourceTrigger=PropertyChanged}" Foreground="Green" Margin="173, 120, 0, 0"></Label>
                <Button Content="Confirm(Alt+C)" Command="{Binding ConfirmRescheduleCommand, UpdateSourceTrigger=PropertyChanged}" Height="38" Margin="5,100,10,0"></Button>
                <Button Content="Cancel(Alt+C)" Command="{Binding CancelRescheduleCommand, UpdateSourceTrigger=PropertyChanged}" Height="38" Margin="5,190,10,0"></Button>
                <Separator Margin="0,250,0,10"></Separator>
            </Grid>
        </DataTemplate>
        <Style x:Key="{x:Type GroupBox}" TargetType="GroupBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>
        <Style x:Key="{x:Type Label}" TargetType="Label">
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
        </Style>
        <Style x:Key="{x:Type Button}" TargetType="Button">
            <Setter Property="Background" Value="#03888f"></Setter>
            <Setter Property="Foreground" Value="#d9eeef"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#d3d2f4"></Setter>
                    <Setter Property="Foreground" Value="#03888f"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#376f72"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Type Grid}" TargetType="Grid">
            <Setter Property="Background" Value="#d9eeef"></Setter>
        </Style>
        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="BorderBrush" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <Border CornerRadius="20,10,20,10"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="5">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="#d2d387" />
                            </MultiTrigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                                <Setter Property="IsSelected" Value="False"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
        </Style>
        <Style x:Key="{x:Type Thumb}" TargetType="Thumb">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border CornerRadius="5"
                                    BorderBrush="#0da2a5"
                                    BorderThickness="1"
                                    Background="#0da2a5"></Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#d9eeef" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="18"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="5"
                                    BorderThickness="0"></Border>
                            <RepeatButton Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineUpButton" Command="ScrollBar.LineUpCommand" Height="18" Content="▲" />
                            <Track x:Name="Track" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="1" IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="white" Height="Auto" Width="Auto"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineDownButton" Command="ScrollBar.LineDownCommand" Height="18" Content="▼" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Height" Value="10"></Setter>
                                <Setter TargetName="Track" Property="IsDirectionReversed" Value="False"></Setter>
                                <Setter TargetName="Track" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="Track" Property="Grid.RowSpan" Value="3"></Setter>
                                <Setter TargetName="Track" Property="Grid.Column" Value="1"></Setter>
                                <Setter TargetName="Track" Property="Grid.ColumnSpan" Value="2"></Setter>
                                <Setter TargetName="Track" Property="Margin" Value="-25,0,2,0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Content" Value="◄" />
                                <Setter TargetName="LineUpButton" Property="Width" Value="18" />
                                <Setter TargetName="LineUpButton" Property="Height" Value="18"></Setter>
                                <Setter TargetName="LineUpButton" Property="Command" Value="ScrollBar.LineLeftCommand"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Column" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Column" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Command" Value="ScrollBar.LineRightCommand"></Setter>
                                <Setter TargetName="LineDownButton" Property="Content" Value="►" />
                                <Setter TargetName="LineDownButton" Property="Width" Value="18" />
                                <Setter TargetName="Thumb" Property="Width" Value="10" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="270"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid>
            <GroupBox Margin="-5, 0,-1, -5">
                <Grid Background="#03888f">
                    <Image VerticalAlignment="Top" Source="https://i.pinimg.com/236x/b6/3e/52/b63e52d00df4c76d0403e836f5e81f32.jpg" Height="143" Margin="-22,0,92,0"/>
                    <Label Content="{Binding User.FullName, UpdateSourceTrigger=PropertyChanged}" FontSize="20" Margin="132,-5,10,646" Height="50" Foreground="#67c9cb"/>
                    <Label Content="Rating:" FontSize="15" Height="59" Margin="132,-32,22,500" Foreground="#67c9cb"/>
                    <Label Content="{Binding Rating, UpdateSourceTrigger=PropertyChanged}" FontSize="15" Height="59" Margin="199,-32,12,500" Foreground="#67c9cb"/>
                    <Image x:Name="Super" Source="http://www.clipartbest.com/cliparts/9iR/Lzj/9iRLzjKkT.png" Margin="115,81,0,538" Height="50" HorizontalAlignment="Center"/>
                    <Button Height="38" Margin="10,-20,20,261" Content="Log out(ESC)" Command="{Binding LogOutCommand}"></Button>
                    <Label Content="Accommodation" HorizontalAlignment="Center" VerticalAlignment="Top" HorizontalContentAlignment="Left" FontSize="27" FontWeight="Bold" Margin="-22,228,0,0" Foreground="#67c9cb"/>
                    <Button Height="38" Margin="10,144,20,229" Content="Create(C)" Command="{Binding CreateCommand}"></Button>
                    <Button Height="38" Margin="10,190,20,163" Content="Update(U)" Command="{Binding UpdateCommand}"></Button>
                    <Button Height="38" Margin="10,236,20,100" Content="Delete(DEL)" Command="{Binding DeleteCommand}"></Button>
                    <Label Content="Renovation" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Left" FontSize="27" FontWeight="Bold" Margin="3,432,0,0" Foreground="#67c9cb"/>
                    <Button Height="38" Margin="10,403,20,70" Content="Renovate(Shift+R)"/>
                    <Button Height="38" Margin="10,449,20,10" Content="Show Renovations(Shift+S)"/>
                    <Button Height="38" Margin="10,613,20,0" Content="Demo(Q)"/>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="163*"/>
                <RowDefinition Height="532*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="11*"></ColumnDefinition>
                <ColumnDefinition Width="5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Grid.Row="0">
                <GroupBox Header="Guest Ratings(F1)" Margin="20,0,479,-20">
                    <StackPanel Margin="0,0,0,0">
                        <ListBox ItemsSource="{Binding GuestRatingNotifications, UpdateSourceTrigger=PropertyChanged}"
                                 ItemTemplate="{StaticResource GuestRatingDataTemplate}"
                                 SelectedItem="{Binding SelectedRating, UpdateSourceTrigger=PropertyChanged}"
                                 Height="119"></ListBox>
                        <Button Height="38" Width="auto" Content="Rate(R)" Command="{Binding RateCommand}" VerticalAlignment="Bottom" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Reviews(F2)" Margin="209,0,282,-20">
                    <StackPanel>
                        <ListBox ItemsSource="{Binding ReviewNotifications, UpdateSourceTrigger=PropertyChanged}"
                                 ItemTemplate="{StaticResource ReviewsDataTemplate}"
                                 Height="119"></ListBox>
                        <Button Height="38" Width="auto" Content="Show reviews(S)" VerticalAlignment="Bottom" Command="{Binding ShowReviewsCommand}"/>
                    </StackPanel>
                </GroupBox>
            </Grid>
            <GroupBox Header="My accommodations(M)" Margin="20,20" Grid.Row="1">
                <ListBox x:Name="AccommodationListBox"
                         ItemsSource="{Binding AccommodationView, UpdateSourceTrigger=PropertyChanged}"
                         ItemTemplate="{StaticResource AccommodationDataTemplate}"
                         SelectedItem="{Binding SelectedAccommodation, UpdateSourceTrigger=PropertyChanged}"/>

            </GroupBox>
            <GroupBox Header="Reschedule requests(F5)" Grid.Column="1" Grid.Row="1" Margin="0,20,10,0">
                <StackPanel>
                    <ListBox ItemsSource="{Binding RescheduleRequests, UpdateSourceTrigger=PropertyChanged}"
                             ItemTemplate="{StaticResource ReservationDataTemplate}"
                             SelectedItem="{Binding SelectedRescheduleRequest, UpdateSourceTrigger=PropertyChanged}" Height="474"></ListBox>
                </StackPanel>
            </GroupBox>
        </Grid>
    </Grid>
</Window>
