<Window x:Class="Tourist_Project.WPF.Views.Owner.ScheduleRenovation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tourist_Project.WPF.Views.Owner"
        xmlns:vm="clr-namespace:Tourist_Project.WPF.ViewModels.Owner"
        xmlns:viewModels="clr-namespace:Tourist_Project.WPF.ViewModels"
        mc:Ignorable="d"
        Title="ScheduleRenovation" Height="730" Width="380" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="{x:Type GroupBox}" TargetType="GroupBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>
        <Style x:Key="{x:Type Label}" TargetType="Label">
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
        </Style>
        <Style x:Key="{x:Type Button}" TargetType="Button">
            <Setter Property="Height" Value="38"></Setter>
            <Setter Property="Background" Value="#03888f"></Setter>
            <Setter Property="Foreground" Value="#d9eeef"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#0fbdc6"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#376f72"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Type Grid}" TargetType="Grid">
            <Setter Property="Background" Value="#d9eeef"></Setter>
        </Style>
        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="BorderBrush" Value="#03888f"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <Border CornerRadius="20,10,20,10"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="5">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="#a5e2e5" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type RepeatButton}" TargetType="RepeatButton">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
        </Style>
        <Style x:Key="{x:Type Thumb}" TargetType="Thumb">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border CornerRadius="5"
                                    BorderBrush="#0da2a5"
                                    BorderThickness="1"
                                    Background="#0da2a5"></Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#d9eeef" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="18"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border CornerRadius="5"
                                    BorderThickness="0"></Border>
                            <RepeatButton Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineUpButton" Command="ScrollBar.LineUpCommand" Height="18" Content="▲" />
                            <Track x:Name="Track" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="1" IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="white" Height="Auto" Width="Auto"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="1" x:Name="LineDownButton" Command="ScrollBar.LineDownCommand" Height="18" Content="▼" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Height" Value="10"></Setter>
                                <Setter TargetName="Track" Property="IsDirectionReversed" Value="False"></Setter>
                                <Setter TargetName="Track" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="Track" Property="Grid.RowSpan" Value="3"></Setter>
                                <Setter TargetName="Track" Property="Grid.Column" Value="1"></Setter>
                                <Setter TargetName="Track" Property="Grid.ColumnSpan" Value="2"></Setter>
                                <Setter TargetName="Track" Property="Margin" Value="-25,0,2,0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Content" Value="◄" />
                                <Setter TargetName="LineUpButton" Property="Width" Value="18" />
                                <Setter TargetName="LineUpButton" Property="Height" Value="18"></Setter>
                                <Setter TargetName="LineUpButton" Property="Command" Value="ScrollBar.LineLeftCommand"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Column" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineUpButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Row" Value="0"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.RowSpan" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Grid.Column" Value="2"></Setter>
                                <Setter TargetName="LineDownButton" Property="Command" Value="ScrollBar.LineRightCommand"></Setter>
                                <Setter TargetName="LineDownButton" Property="Content" Value="►" />
                                <Setter TargetName="LineDownButton" Property="Width" Value="18" />
                                <Setter TargetName="Thumb" Property="Width" Value="10" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
            <Setter Property="Background" Value="#d9eeef"></Setter>
            <Setter Property="Foreground" Value="#0da2a5"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="#67c9cb"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="10,5,10,5">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#edf6f7"></Setter>
                                <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewModels:ScheduleRenovationViewModel/>
    </Window.DataContext>
    <Grid>
        <Label Content="Renovation" HorizontalAlignment="Center" Margin="10" FontSize="24" FontWeight="Bold"></Label>
        <DataGrid Margin="30,70,30,565" Height="55"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding AccommodationViewModel}"
                  VerticalScrollBarVisibility="Hidden"
                  RowHeight="31">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Accommodation name" Width="*" Binding="{Binding Accommodation.Name, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Owner" Width="*" Binding="{Binding User.FullName, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Enter earliest date:" Margin="25,132,10,328"></Label>
        <Label Content="Enter furthest date:" Margin="195,132,30,328"></Label>
        <DatePicker IsTodayHighlighted="True" DisplayDateStart="{Binding Today}" SelectedDate="{Binding RequestedDateSpan.StartingDate}" Width="134" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,160,0,0"></DatePicker>
        <DatePicker IsTodayHighlighted="True" DisplayDateStart="{Binding Today}" SelectedDate="{Binding RequestedDateSpan.EndingDate}" Width="134" Height="50"  VerticalAlignment="Top" Margin="199,160,30,0"/>
        <Label Content="Enter length of renovation:" Margin="25,225,30,285"></Label>
        <TextBox Text="{Binding RenovationLength}" Margin="30,208,30,348" HorizontalAlignment="Center" VerticalContentAlignment="Center" Width="304" Height="28"></TextBox>
        <Button Content="Find(Shift+F)" Command="{Binding FindCommand}" Margin="30,188,30,228"></Button>
        <Label Content="Possible dates:" Margin="25,385,10,185"></Label>
        <DataGrid Margin="30,420,30,183"
                  ItemsSource="{Binding PossibleDateSpans, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedDateSpan, UpdateSourceTrigger=PropertyChanged}"
                  AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Starting date:" Width="*" Binding="{Binding StartingDate, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Ending date:" Width="*" Binding="{Binding EndingDate, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Renovation description:" Margin="25,530,30,136"></Label>
        <TextBox Text="{Binding Description}" Margin="0,535,0,66" HorizontalAlignment="Center" VerticalContentAlignment="Center" Width="304" Height="28"></TextBox>
        <Button Content="Renovate(Enter)" Command="{Binding RenovateCommand}" Margin="30,620,30,20"></Button>
    </Grid>
</Window>
